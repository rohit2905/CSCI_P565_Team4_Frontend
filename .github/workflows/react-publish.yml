# This is a basic workflow to help you get started with Actions
name: CI-CD

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # This workflow contains multiple jobs
  build_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      # install applicaion dependencies
      - name: Install dependencies
        run: |
          npm install --legacy-peer-deps
        working-directory: client/
      # build and test the apps
      - name: build
        run: |
          npm run build
        working-directory: client/
          
  build_and_publish:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: install dependencies
              run: npm install --legacy-peer-deps
              working-directory: client/
            - name: Build and push the image
              run: |
                docker login --username rohit2905 --password ${{secrets.ACCESS_TOKEN}} ghcr.io
                docker build -t ghcr.io/rohit2905/deliverwise-frontend:latest --file Dockerfile .  
                docker push ghcr.io/rohit2905/deliverwise-frontend:latest 
  push_to_vercel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: amondnet/vercel-action@v20
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}} 
          vercel-project-id: ${{ secrets.PROJECT_ID}}
          vercel-args: "--prod"
